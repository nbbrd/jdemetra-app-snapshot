<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.nbbrd.jdemetra-app-snapshot</groupId>
    <artifactId>jdemetra-app-snapshot</artifactId>
    <version>1.0.0-snapshot</version>
    <packaging>pom</packaging>

    <properties>
        <java.bundled.version>jdk-21.0.2+13</java.bundled.version>
        <jdkname>${java.bundled.version}-jre</jdkname>
        <jdplus-main.version>3.2.2-SNAPSHOT</jdplus-main.version>
        <jdplus-sdmx.version>3.1.1-SNAPSHOT</jdplus-sdmx.version>
        <jdplus-benchmarking.version>1.2.0-SNAPSHOT</jdplus-benchmarking.version>
        <jdplus-incubator.version>2.0.1-SNAPSHOT</jdplus-incubator.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-main-desktop-bin</artifactId>
            <version>${jdplus-main.version}</version>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-main-cli-bin</artifactId>
            <version>${jdplus-main.version}</version>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.nbbrd.jdplus-sdmx</groupId>
            <artifactId>jdplus-sdmx-desktop-plugin</artifactId>
            <version>${jdplus-sdmx.version}</version>
            <type>nbm</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-benchmarking-desktop-plugin</artifactId>
            <version>${jdplus-benchmarking.version}</version>
            <type>nbm</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-highfreq-desktop-plugin</artifactId>
            <version>${jdplus-incubator.version}</version>
            <type>nbm</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-stl-desktop-plugin</artifactId>
            <version>${jdplus-incubator.version}</version>
            <type>nbm</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec.joinup.sat</groupId>
            <artifactId>jdplus-sts-desktop-plugin</artifactId>
            <version>${jdplus-incubator.version}</version>
            <type>nbm</type>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 1. Check signatures and create timestamp -->
            <plugin>
                <groupId>org.simplify4u.plugins</groupId>
                <artifactId>pgpverify-maven-plugin</artifactId>
                <version>1.17.0</version>
                <executions>
                    <execution>
                        <id>check-signatures</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <verifySnapshots>true</verifySnapshots>
                            <failNoSignature>true</failNoSignature>
                            <failWeakSignature>true</failWeakSignature>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <id>setup-timestamp</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>timestamp</name>
                            <pattern>yyyyMMddHHmmss</pattern>
                            <locale>ROOT</locale>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 2. Gather plugins, binaries and JRE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>copy-plugins-and-binaries</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <useBaseVersion>true</useBaseVersion>
                            <outputDirectory>${project.build.directory}/upload</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jreleaser</groupId>
                <artifactId>jdks-maven-plugin</artifactId>
                <version>1.10.0</version>
                <executions>
                    <execution>
                        <id>download-windows-jre</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>setup-disco</goal>
                        </goals>
                        <configuration>
                            <pkgs>
                                <pkg>
                                    <name>temurin-windows</name>
                                    <distribution>temurin</distribution>
                                    <platform>windows-x86_64</platform>
                                    <version>${java.bundled.version}</version>
                                    <packageType>jre</packageType>
                                </pkg>
                                <pkg>
                                    <name>temurin-linux</name>
                                    <distribution>temurin</distribution>
                                    <platform>linux-x86_64</platform>
                                    <version>${java.bundled.version}</version>
                                    <packageType>jre</packageType>
                                    <archiveType>tar.gz</archiveType>
                                </pkg>
                            </pkgs>
                            <unpack>false</unpack>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 3. Create binaries bundled with JRE -->
            <plugin>
                <groupId>io.github.floverfelt</groupId>
                <artifactId>find-and-replace-maven-plugin</artifactId>
                <version>1.1.0</version>
                <executions>
                    <execution>
                        <id>add-timestamp-to-filenames</id>
                        <phase>package</phase>
                        <goals>
                            <goal>find-and-replace</goal>
                        </goals>
                        <configuration>
                            <replacementType>filenames</replacementType>
                            <baseDir>target/upload/</baseDir>
                            <findRegex>-SNAPSHOT</findRegex>
                            <replaceValue>-SNAPSHOT+${timestamp}</replaceValue>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>pack-cli-binaries</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <move file="${project.build.directory}/upload/jdplus-main-cli-bin-${jdplus-main.version}.zip"
                                      tofile="${project.build.directory}/upload/jwsacruncher-${jdplus-main.version}.zip"/>

                                <pathconvert property="temurin.windows">
                                    <first>
                                        <fileset dir="${project.build.directory}/jdks/temurin-windows"/>
                                    </first>
                                </pathconvert>

                                <ant antfile="${project.basedir}/src/antrun/bundle-appassembler.xml">
                                    <property name="x.programId" value="jwsacruncher"/>
                                    <property name="x.input"
                                              value="${project.build.directory}/upload/jwsacruncher-${jdplus-main.version}.zip"/>
                                    <property name="x.output"
                                              value="${project.build.directory}/upload/jwsacruncher-${jdplus-main.version}-windows.zip"/>
                                    <property name="x.assembleDirectory" value="jwsacruncher-${jdplus-main.version}"/>
                                    <property name="x.jdkArchive" value="${temurin.windows}"/>
                                    <property name="x.jdkDirectory" value="${jdkname}"/>
                                    <target name="bundle-zip"/>
                                </ant>

                                <pathconvert property="temurin.linux">
                                    <first>
                                        <fileset dir="${project.build.directory}/jdks/temurin-linux"/>
                                    </first>
                                </pathconvert>

                                <ant antfile="${project.basedir}/src/antrun/bundle-appassembler.xml">
                                    <property name="x.programId" value="jwsacruncher"/>
                                    <property name="x.input"
                                              value="${project.build.directory}/upload/jwsacruncher-${jdplus-main.version}.zip"/>
                                    <property name="x.output"
                                              value="${project.build.directory}/upload/jwsacruncher-${jdplus-main.version}-linux.tar.gz"/>
                                    <property name="x.assembleDirectory" value="jwsacruncher-${jdplus-main.version}"/>
                                    <property name="x.jdkArchive" value="${temurin.linux}"/>
                                    <property name="x.jdkDirectory" value="${jdkname}"/>
                                    <target name="bundle-tar"/>
                                </ant>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pack-desktop-binaries</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- 1. rename main binary -->
                                <move file="${project.build.directory}/upload/jdplus-main-desktop-bin-${jdplus-main.version}.zip"
                                      tofile="${project.build.directory}/upload/jdemetra-${jdplus-main.version}.zip"/>

                                <!-- 2. extract and modify config -->
                                <unzip src="${project.build.directory}/upload/jdemetra-${jdplus-main.version}.zip"
                                       dest="${project.build.directory}/pack_desktop" overwrite="true">
                                    <patternset>
                                        <include name="nbdemetra/etc/nbdemetra.conf"/>
                                    </patternset>
                                </unzip>
                                <replace file="${project.build.directory}/pack_desktop/nbdemetra/etc/nbdemetra.conf"
                                         token="#jdkhome=&quot;/path/to/jdk&quot;" value="jdkhome=${jdkname}"/>

                                <!-- 3. merge main, config and jdk into windows binary -->
                                <pathconvert property="jdk.filename">
                                    <first>
                                        <fileset dir="${project.build.directory}/jdks/temurin-windows"/>
                                    </first>
                                </pathconvert>
                                <zip destfile="${project.build.directory}/upload/jdemetra-${jdplus-main.version}-windows.zip">
                                    <zipfileset
                                            src="${project.build.directory}/upload/jdemetra-${jdplus-main.version}.zip"
                                            excludes="nbdemetra/etc/nbdemetra.conf"/>
                                    <zipfileset dir="${project.build.directory}/pack_desktop/nbdemetra"
                                                prefix="nbdemetra"/>
                                    <zipfileset src="${jdk.filename}" prefix="nbdemetra"/>
                                </zip>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>jdemetra-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>nbbrd-snapshots</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
